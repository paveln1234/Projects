#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = ../../inc/
INCLIB = ../../../../advc/inc/
CFLAGS = -Wall
RESINC =
LIBDIR =
LIB =
LDFLAGS =

LIBDS = ../../../../advc/inc/
LIBSMAKE = ../../../../advc/

INC_DEBUG = -I $(INC) -I $(INCLIB)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS) -pthread -lm
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG =
OUT_DEBUG = bin/Debug/reporter

INC_RELEASE = -I $(INC) -I $(INCLIB)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s -pthread -lm
OBJDIR_RELEASE = obj/Release
DEP_RELEASE =
OUT_RELEASE = bin/Release/reporter

OBJ_DEBUG = $(OBJDIR_DEBUG)/__/cdrmanager/cdrMessager.o $(OBJDIR_DEBUG)/__/cdrmanager/cdrParser.o $(OBJDIR_DEBUG)/__/cdrmanager/cdrParserManager.o $(OBJDIR_DEBUG)/__/cdrmanager/discoverer.o $(OBJDIR_DEBUG)/__/datamanager/datamanager.o $(OBJDIR_DEBUG)/__/datamanager/oparetorDs.o $(OBJDIR_DEBUG)/__/datamanager/operator.o $(OBJDIR_DEBUG)/__/datamanager/subscribeDs.o $(OBJDIR_DEBUG)/__/datamanager/subsriber.o $(OBJDIR_DEBUG)/__/fileHandler.o $(OBJDIR_DEBUG)/reporter-test.o $(OBJDIR_DEBUG)/reporter.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/__/cdrmanager/cdrMessager.o $(OBJDIR_RELEASE)/__/cdrmanager/cdrParser.o $(OBJDIR_RELEASE)/__/cdrmanager/cdrParserManager.o $(OBJDIR_RELEASE)/__/cdrmanager/discoverer.o $(OBJDIR_RELEASE)/__/datamanager/datamanager.o $(OBJDIR_RELEASE)/__/datamanager/oparetorDs.o $(OBJDIR_RELEASE)/__/datamanager/operator.o $(OBJDIR_RELEASE)/__/datamanager/subscribeDs.o $(OBJDIR_RELEASE)/__/datamanager/subsriber.o $(OBJDIR_RELEASE)/__/fileHandler.o $(OBJDIR_RELEASE)/reporter-test.o $(OBJDIR_RELEASE)/reporter.o
LIBS = libds.a
all: debug release

clean: clean_debug clean_release

before_debug:
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG)/__/cdrmanager || mkdir -p $(OBJDIR_DEBUG)/__/cdrmanager
	test -d $(OBJDIR_DEBUG)/__/datamanager || mkdir -p $(OBJDIR_DEBUG)/__/datamanager
	test -d $(OBJDIR_DEBUG)/__ || mkdir -p $(OBJDIR_DEBUG)/__
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug:

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG) $(LIBSMAKE)$(LIBS)
	$(CC) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG) $(LIBSMAKE)$(LIBS) $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/__/cdrmanager/cdrMessager.o: ../cdrmanager/cdrMessager.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../cdrmanager/cdrMessager.c -o $(OBJDIR_DEBUG)/__/cdrmanager/cdrMessager.o

$(OBJDIR_DEBUG)/__/cdrmanager/cdrParser.o: ../cdrmanager/cdrParser.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../cdrmanager/cdrParser.c -o $(OBJDIR_DEBUG)/__/cdrmanager/cdrParser.o

$(OBJDIR_DEBUG)/__/cdrmanager/cdrParserManager.o: ../cdrmanager/cdrParserManager.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../cdrmanager/cdrParserManager.c -o $(OBJDIR_DEBUG)/__/cdrmanager/cdrParserManager.o

$(OBJDIR_DEBUG)/__/cdrmanager/discoverer.o: ../cdrmanager/discoverer.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../cdrmanager/discoverer.c -o $(OBJDIR_DEBUG)/__/cdrmanager/discoverer.o

$(OBJDIR_DEBUG)/__/datamanager/datamanager.o: ../datamanager/datamanager.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../datamanager/datamanager.c -o $(OBJDIR_DEBUG)/__/datamanager/datamanager.o

$(OBJDIR_DEBUG)/__/datamanager/oparetorDs.o: ../datamanager/oparetorDs.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../datamanager/oparetorDs.c -o $(OBJDIR_DEBUG)/__/datamanager/oparetorDs.o

$(OBJDIR_DEBUG)/__/datamanager/operator.o: ../datamanager/operator.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../datamanager/operator.c -o $(OBJDIR_DEBUG)/__/datamanager/operator.o

$(OBJDIR_DEBUG)/__/datamanager/subscribeDs.o: ../datamanager/subscribeDs.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../datamanager/subscribeDs.c -o $(OBJDIR_DEBUG)/__/datamanager/subscribeDs.o

$(OBJDIR_DEBUG)/__/datamanager/subsriber.o: ../datamanager/subsriber.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../datamanager/subsriber.c -o $(OBJDIR_DEBUG)/__/datamanager/subsriber.o

$(OBJDIR_DEBUG)/__/fileHandler.o: ../fileHandler.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ../fileHandler.c -o $(OBJDIR_DEBUG)/__/fileHandler.o

$(OBJDIR_DEBUG)/reporter-test.o: reporter-test.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c reporter-test.c -o $(OBJDIR_DEBUG)/reporter-test.o

$(OBJDIR_DEBUG)/reporter.o: reporter.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c reporter.c -o $(OBJDIR_DEBUG)/reporter.o

clean_debug:
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)/__/cdrmanager
	rm -rf $(OBJDIR_DEBUG)/__/datamanager
	rm -rf $(OBJDIR_DEBUG)/__
	rm -rf $(OBJDIR_DEBUG)

before_release:
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/__/cdrmanager || mkdir -p $(OBJDIR_RELEASE)/__/cdrmanager
	test -d $(OBJDIR_RELEASE)/__/datamanager || mkdir -p $(OBJDIR_RELEASE)/__/datamanager
	test -d $(OBJDIR_RELEASE)/__ || mkdir -p $(OBJDIR_RELEASE)/__
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release:

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(CC) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE) $(LIBSMAKE)$(LIBS) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/__/cdrmanager/cdrMessager.o: ../cdrmanager/cdrMessager.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../cdrmanager/cdrMessager.c -o $(OBJDIR_RELEASE)/__/cdrmanager/cdrMessager.o

$(OBJDIR_RELEASE)/__/cdrmanager/cdrParser.o: ../cdrmanager/cdrParser.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../cdrmanager/cdrParser.c -o $(OBJDIR_RELEASE)/__/cdrmanager/cdrParser.o

$(OBJDIR_RELEASE)/__/cdrmanager/cdrParserManager.o: ../cdrmanager/cdrParserManager.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../cdrmanager/cdrParserManager.c -o $(OBJDIR_RELEASE)/__/cdrmanager/cdrParserManager.o

$(OBJDIR_RELEASE)/__/cdrmanager/discoverer.o: ../cdrmanager/discoverer.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../cdrmanager/discoverer.c -o $(OBJDIR_RELEASE)/__/cdrmanager/discoverer.o

$(OBJDIR_RELEASE)/__/datamanager/datamanager.o: ../datamanager/datamanager.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../datamanager/datamanager.c -o $(OBJDIR_RELEASE)/__/datamanager/datamanager.o

$(OBJDIR_RELEASE)/__/datamanager/oparetorDs.o: ../datamanager/oparetorDs.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../datamanager/oparetorDs.c -o $(OBJDIR_RELEASE)/__/datamanager/oparetorDs.o

$(OBJDIR_RELEASE)/__/datamanager/operator.o: ../datamanager/operator.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../datamanager/operator.c -o $(OBJDIR_RELEASE)/__/datamanager/operator.o

$(OBJDIR_RELEASE)/__/datamanager/subscribeDs.o: ../datamanager/subscribeDs.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../datamanager/subscribeDs.c -o $(OBJDIR_RELEASE)/__/datamanager/subscribeDs.o

$(OBJDIR_RELEASE)/__/datamanager/subsriber.o: ../datamanager/subsriber.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../datamanager/subsriber.c -o $(OBJDIR_RELEASE)/__/datamanager/subsriber.o

$(OBJDIR_RELEASE)/__/fileHandler.o: ../fileHandler.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ../fileHandler.c -o $(OBJDIR_RELEASE)/__/fileHandler.o

$(OBJDIR_RELEASE)/reporter-test.o: reporter-test.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c reporter-test.c -o $(OBJDIR_RELEASE)/reporter-test.o

$(OBJDIR_RELEASE)/reporter.o: reporter.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c reporter.c -o $(OBJDIR_RELEASE)/reporter.o

clean_release:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/__/cdrmanager
	rm -rf $(OBJDIR_RELEASE)/__/datamanager
	rm -rf $(OBJDIR_RELEASE)/__
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

#libslibs
$(LIBSMAKE)$(LIBS): $(LIBS)

#make libds.a -C mean the der path
$(LIBS) :
	$(MAKE) $(LIBS) -C $(LIBSMAKE)
run:
	mv ./bin/Release/reporter ./
	./reporter
